<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARiSURBVFhH7dZ5TJtlHAdwYIct7duWGylawtkCg0li42Jw4xzlGhAKyGA9KbS0o9CDc5RDJ6sD
        /2IagwfL1I0IjGstlAIdTtxwmmnwignGaIwbyTI1km3I14rvYkxwbjpINHySX968z/M7kvd5k/d12bLl
        f6/45eKHpK9J3cjbzcUysPi6Cd334j6xw6feh0Eubw6qlhrn2em51PNFDyqmKrCteZvDVeNKkNsbi2lk
        xvh2+V5tm29D/1I/zl47i/39++Ha6GqnVFNoZNrG8NB5RAV0BnzX8E4DTi6eRO9i71qcWjyF5NPJiOyM
        PBffFf/370SKOWVn0rGk+zo3b613BMfM+VZnr8GLCyfQ/XE3uj/6I9outIH/Ev86/1k+hSxZn1eVl0/u
        q7kfNk803whrCksil+/KR+sTGtIR8rXGUomuy8dxfN6M5y+aYZ5zxgUzdFYdqCbq8nbV9kyyZH30CrqX
        f5P/B2WDUhydbUVM164f2TXsveT2unw1vkHc57iLymE5jr7bimdmTWh3mNA2bUKr3QTDmA7MZuZNN7lb
        HlmyPqaSyfI2el/K7c1Ay0wdjswYoLeqsbsj9gZbzX6STPsTtob9SGRr5JeKwUMwna9F07QBjXY9Gib0
        qLfqUecc7tfse2tH2Y5CsmR9LBnLLag+aDr7lRQYnUP1ViUMNhVq7SpoR2XY3RJ7PUD5MJ9MXxNQHsCO
        aoz8TNZXiPppNYyTKujHVdBZlKgeUaLxnA4cU+BtShmlhCz5a4SY2BndEnWt/EwB1EMiaEZFqLKKoJ0Q
        o8YuhmboIGLrdi35y/3jfsv3k/j5c2u4C5I3cqCfkkJrE6/lHx4TQT0sgmlcj3BT8ApFSpGsDbgXhJTY
        y9b7/yB6UwDFUD4qRvOhsgpRaRNCYy+AciAX0VreVT+Rb3KoKvRK6esCVE0Xre2rxoWoGMuHYjgf7ZN6
        xLTwVmhSmoJsfe/oYnpSkC7wJ0lfKqQj6ZBb0lE2kYFyewaUM5lQvJ2G6EreanFPAtSOLJRPZUBhy4Dc
        mg71eAHMjjo83hr7i/OJqsmW949WSksLq+H8LB9IhMiyDxJbAmRTCZA7EqCYTUS1TYDaS0IY5oTQns9B
        5WQGZCPO3NNPIKYhZJV5iFlDtvrniIP0zIjDQcuygT3IG4mA0MpF4SQXRVNc5E8GI83ihaRhBhIGCDx1
        hkDWW2zE1YasskpZtWSLf48oIHJ5Ks7NpwdDkGJhIG2SifQZZzh+vwrsTKSOMyAcCwTfGLrKKGIcIUsf
        HCKPKIxScG5JbGHImmPhwDwLOZed8T4L2RdZKJ19FHsMYasMIdFOljx4xAF6SbSMc1v5nvMoPvFAweee
        KPjUA2VXghDvHE5kE8fcc9xdyfSN4Z5JlcRKOSvVCzyUfOMFzWIwEo3hIAT0F9zTqRs7/A6qgKp4TMJZ
        6fiKD0EjD/RUWjc1jbq5v1v0NHfVvorw5YBcjxO0zR5+h08h7e7f8y1b/jtcXH4FX2/+kyNO2Z8AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>